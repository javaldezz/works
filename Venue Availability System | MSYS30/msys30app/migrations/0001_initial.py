# Generated by Django 5.0.1 on 2024-11-18 08:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Venues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('venue_name', models.CharField(help_text='Name of the venue.', max_length=100)),
                ('capacity', models.PositiveIntegerField(help_text='Capacity of the venue.')),
                ('projector_availability', models.BooleanField(default=False, help_text='Is a projector available?')),
                ('tv_availability', models.BooleanField(default=False, help_text='Is a TV available?')),
                ('speaker_availability', models.BooleanField(default=False, help_text='Are speakers available?')),
                ('desktop_availability', models.BooleanField(default=False, help_text='Is a desktop available?')),
                ('mic_connector_availability', models.BooleanField(default=False, help_text='Is a microphone connector available?')),
                ('ac_availability', models.BooleanField(default=False, help_text='Is air conditioning available?')),
            ],
            options={
                'verbose_name': 'Venue',
                'verbose_name_plural': 'Venues',
                'ordering': ['venue_name'],
            },
        ),
        migrations.CreateModel(
            name='UserInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building', models.CharField(help_text='Building name where the venue is located.', max_length=100)),
                ('reservation_date', models.DateField(help_text='Reservation date in YYYY-MM-DD format.')),
                ('target_time', models.CharField(choices=[('08:00', '08:00'), ('09:30', '09:30'), ('11:00', '11:00'), ('12:30', '12:30'), ('14:00', '14:00'), ('15:30', '15:30'), ('17:00', '17:00'), ('18:30', '18:30')], help_text='Select a start time for the reservation.', max_length=5)),
                ('capacity_needed', models.PositiveIntegerField(help_text='Enter the capacity needed for the venue.')),
                ('duration', models.IntegerField(choices=[(1, '30 minutes'), (2, '1 hour'), (3, '1 hour 30 minutes'), (4, '2 hours'), (5, '2 hours 30 minutes'), (6, '3 hours'), (7, '3 hours 30 minutes'), (8, '4 hours')], help_text='Select the duration of the reservation in 30-minute increments.')),
                ('venue_name', models.ForeignKey(help_text='Select the venue for the reservation.', on_delete=django.db.models.deletion.CASCADE, to='msys30app.venues')),
            ],
            options={
                'verbose_name': 'User Input',
                'verbose_name_plural': 'User Inputs',
                'ordering': ['reservation_date', 'target_time'],
            },
        ),
        migrations.CreateModel(
            name='Reservations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building', models.CharField(help_text='Building name where the venue is located.', max_length=100)),
                ('reservation_date', models.DateField(help_text='Reservation date in YYYY-MM-DD format.')),
                ('target_time', models.CharField(choices=[('08:00 - 09:30', '08:00 - 09:30'), ('09:30 - 11:00', '09:30 - 11:00'), ('11:00 - 12:30', '11:00 - 12:30'), ('12:30 - 14:00', '12:30 - 14:00'), ('14:00 - 15:30', '14:00 - 15:30'), ('15:30 - 17:00', '15:30 - 17:00'), ('17:00 - 18:30', '17:00 - 18:30'), ('18:30 - 20:00', '18:30 - 20:00')], help_text='Select a time slot for the reservation.', max_length=13)),
                ('venue_name', models.ForeignKey(help_text='Select the venue being reserved.', on_delete=django.db.models.deletion.CASCADE, to='msys30app.venues')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
                'ordering': ['reservation_date', 'target_time'],
            },
        ),
    ]
